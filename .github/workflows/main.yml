name: pixero-automation-task
run-name: running tests
env:
  image_name: cucumber-playwright:latest
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
      - name: check image name
        run: echo "${{ env.image_name }} ${{ env.image_name }}"
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build docker images
        run: |
          docker build . --file Dockerfile --tag ghcr.io/${{github.actor}}/${{ env.image_name }}
          docker push ghcr.io/${{github.actor}}/${{ env.image_name }}
  run-tests:
    runs-on: ubuntu-latest
    needs: build
#    container: ghcr.io/${{github.actor}}/${{ env.image_name }}
    steps:
#      - name: 'Run tests'
#        run: yarn run test
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: run container
        run: |
          docker pull ghcr.io/${{github.actor}}/${{ env.image_name }}
          docker run ghcr.io/${{github.actor}}/${{ env.image_name }}
#  reporting:
#    runs-on: ubuntu-latest
#    container: frankescobar/allure-docker-service
#    needs: tests
#    steps:
#      - uses: actions/checkout@v2
#      - name: copy results from container
#        run: docker cp ${{ env.image_name }}:/app/allure-results
#      - name: reporting
#        run: allure generate -c ./allure-results -o ./allure-report

